{
	"id": "954b74cdc1615c2955c47c9bbfa91645",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\n/***\n6.错误处理与自定义错误 作业\n编写一个合约，使用 assert、require 和 revert 来处理输入参数和内部逻辑错误。\n在合约中实现 try/catch 结构，捕获外部合约调用中的异常，并返回处理结果。\n使用 Solidity 0.8.0 的自定义错误机制重构错误处理逻辑，减少 Gas 消耗。\n***/\ncontract ErrorCustomHandle {\n    \n    error Unauthorized(address caller);\n\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function addCustom(uint a, uint b) public pure returns(uint c) {\n        require(a > 0 && b > 0);\n        c = a * b;\n        assert(c >= a && c >= b);\n        if (c == 0) {\n            revert(\"error handle\");\n        }\n    }\n\n    function validUser() public {\n        if (msg.sender != owner) {\n            revert Unauthorized(msg.sender);\n        }\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol": {
				"ErrorCustomHandle": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "addCustom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "c",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "validUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":405:925  contract ErrorCustomHandle {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":511:560  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":543:553  msg.sender */\n  caller\n    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":535:540  owner */\n  0x00\n  dup1\n    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":535:553  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":405:925  contract ErrorCustomHandle {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":405:925  contract ErrorCustomHandle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b36f9aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcaf7d197\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":566:790  function addCustom(uint a, uint b) public pure returns(uint c) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":484:504  address public owner */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":796:921  function validUser() public {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":566:790  function addCustom(uint a, uint b) public pure returns(uint c) {... */\n    tag_9:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":621:627  uint c */\n      0x00\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":651:652  0 */\n      dup1\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":647:648  a */\n      dup4\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":647:652  a > 0 */\n      gt\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":647:661  a > 0 && b > 0 */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":660:661  0 */\n      0x00\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":656:657  b */\n      dup3\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":656:661  b > 0 */\n      gt\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":647:661  a > 0 && b > 0 */\n    tag_19:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":639:662  require(a > 0 && b > 0) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":680:681  b */\n      dup2\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":676:677  a */\n      dup4\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":676:681  a * b */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":672:681  c = a * b */\n      swap1\n      pop\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":703:704  a */\n      dup3\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":698:699  c */\n      dup2\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":698:704  c >= a */\n      lt\n      iszero\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":698:714  c >= a && c >= b */\n      dup1\n      iszero\n      tag_23\n      jumpi\n      pop\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":713:714  b */\n      dup2\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":708:709  c */\n      dup2\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":708:714  c >= b */\n      lt\n      iszero\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":698:714  c >= a && c >= b */\n    tag_23:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":691:715  assert(c >= a && c >= b) */\n      tag_24\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n    tag_24:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":734:735  0 */\n      0x00\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":729:730  c */\n      dup2\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":729:735  c == 0 */\n      sub\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":725:784  if (c == 0) {... */\n      tag_27\n      jumpi\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":751:773  revert(\"error handle\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":725:784  if (c == 0) {... */\n    tag_27:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":566:790  function addCustom(uint a, uint b) public pure returns(uint c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":484:504  address public owner */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":796:921  function validUser() public {... */\n    tag_17:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":852:857  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":838:857  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":838:848  msg.sender */\n      caller\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":838:857  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":834:915  if (msg.sender != owner) {... */\n      tag_31\n      jumpi\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":893:903  msg.sender */\n      caller\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":880:904  Unauthorized(msg.sender) */\n      mload(0x40)\n      0x8e4a23d600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":834:915  if (msg.sender != owner) {... */\n    tag_31:\n        /* \"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":796:921  function validUser() public {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_36:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_37:\n        /* \"#utility.yul\":490:514   */\n      tag_53\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_54:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_38:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_56\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_8:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_59\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":783:902   */\n    tag_58:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_60\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_38\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_61\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_38\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_39:\n        /* \"#utility.yul\":1257:1281   */\n      tag_63\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_36\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1516   */\n    tag_11:\n        /* \"#utility.yul\":1387:1391   */\n      0x00\n        /* \"#utility.yul\":1425:1427   */\n      0x20\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1410:1428   */\n      add\n        /* \"#utility.yul\":1402:1428   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1509   */\n      tag_65\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1495:1504   */\n      dup4\n        /* \"#utility.yul\":1491:1508   */\n      add\n        /* \"#utility.yul\":1482:1488   */\n      dup5\n        /* \"#utility.yul\":1438:1509   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1294:1516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1522:1648   */\n    tag_40:\n        /* \"#utility.yul\":1559:1566   */\n      0x00\n        /* \"#utility.yul\":1599:1641   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1592:1597   */\n      dup3\n        /* \"#utility.yul\":1588:1642   */\n      and\n        /* \"#utility.yul\":1577:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1522:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1750   */\n    tag_41:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_68\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1709:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1874   */\n    tag_42:\n        /* \"#utility.yul\":1843:1867   */\n      tag_70\n        /* \"#utility.yul\":1861:1866   */\n      dup2\n        /* \"#utility.yul\":1843:1867   */\n      tag_41\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1838:1841   */\n      dup3\n        /* \"#utility.yul\":1831:1868   */\n      mstore\n        /* \"#utility.yul\":1756:1874   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2102   */\n    tag_15:\n        /* \"#utility.yul\":1973:1977   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"#utility.yul\":1988:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2024:2095   */\n      tag_72\n        /* \"#utility.yul\":2092:2093   */\n      0x00\n        /* \"#utility.yul\":2081:2090   */\n      dup4\n        /* \"#utility.yul\":2077:2094   */\n      add\n        /* \"#utility.yul\":2068:2074   */\n      dup5\n        /* \"#utility.yul\":2024:2095   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1880:2102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2288   */\n    tag_43:\n        /* \"#utility.yul\":2156:2233   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2146:2234   */\n      mstore\n        /* \"#utility.yul\":2253:2257   */\n      0x11\n        /* \"#utility.yul\":2250:2251   */\n      0x04\n        /* \"#utility.yul\":2243:2258   */\n      mstore\n        /* \"#utility.yul\":2277:2281   */\n      0x24\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2267:2282   */\n      revert\n        /* \"#utility.yul\":2294:2704   */\n    tag_22:\n        /* \"#utility.yul\":2334:2341   */\n      0x00\n        /* \"#utility.yul\":2357:2377   */\n      tag_75\n        /* \"#utility.yul\":2375:2376   */\n      dup3\n        /* \"#utility.yul\":2357:2377   */\n      tag_36\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2352:2377   */\n      swap2\n      pop\n        /* \"#utility.yul\":2391:2411   */\n      tag_76\n        /* \"#utility.yul\":2409:2410   */\n      dup4\n        /* \"#utility.yul\":2391:2411   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2386:2411   */\n      swap3\n      pop\n        /* \"#utility.yul\":2446:2447   */\n      dup3\n        /* \"#utility.yul\":2443:2444   */\n      dup3\n        /* \"#utility.yul\":2439:2448   */\n      mul\n        /* \"#utility.yul\":2468:2498   */\n      tag_77\n        /* \"#utility.yul\":2486:2497   */\n      dup2\n        /* \"#utility.yul\":2468:2498   */\n      tag_36\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2457:2498   */\n      swap2\n      pop\n        /* \"#utility.yul\":2647:2648   */\n      dup3\n        /* \"#utility.yul\":2638:2645   */\n      dup3\n        /* \"#utility.yul\":2634:2649   */\n      div\n        /* \"#utility.yul\":2631:2632   */\n      dup5\n        /* \"#utility.yul\":2628:2650   */\n      eq\n        /* \"#utility.yul\":2608:2609   */\n      dup4\n        /* \"#utility.yul\":2601:2610   */\n      iszero\n        /* \"#utility.yul\":2581:2664   */\n      or\n        /* \"#utility.yul\":2558:2697   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2677:2695   */\n      tag_79\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2558:2697   */\n    tag_78:\n        /* \"#utility.yul\":2342:2704   */\n      pop\n        /* \"#utility.yul\":2294:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2890   */\n    tag_26:\n        /* \"#utility.yul\":2758:2835   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2755:2756   */\n      0x00\n        /* \"#utility.yul\":2748:2836   */\n      mstore\n        /* \"#utility.yul\":2855:2859   */\n      0x01\n        /* \"#utility.yul\":2852:2853   */\n      0x04\n        /* \"#utility.yul\":2845:2860   */\n      mstore\n        /* \"#utility.yul\":2879:2883   */\n      0x24\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2869:2884   */\n      revert\n        /* \"#utility.yul\":2896:3065   */\n    tag_44:\n        /* \"#utility.yul\":2980:2991   */\n      0x00\n        /* \"#utility.yul\":3014:3020   */\n      dup3\n        /* \"#utility.yul\":3009:3012   */\n      dup3\n        /* \"#utility.yul\":3002:3021   */\n      mstore\n        /* \"#utility.yul\":3054:3058   */\n      0x20\n        /* \"#utility.yul\":3049:3052   */\n      dup3\n        /* \"#utility.yul\":3045:3059   */\n      add\n        /* \"#utility.yul\":3030:3059   */\n      swap1\n      pop\n        /* \"#utility.yul\":2896:3065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3233   */\n    tag_45:\n        /* \"#utility.yul\":3211:3225   */\n      0x6572726f722068616e646c650000000000000000000000000000000000000000\n        /* \"#utility.yul\":3207:3208   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup3\n        /* \"#utility.yul\":3195:3209   */\n      add\n        /* \"#utility.yul\":3188:3226   */\n      mstore\n        /* \"#utility.yul\":3071:3233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3239:3605   */\n    tag_46:\n        /* \"#utility.yul\":3381:3384   */\n      0x00\n        /* \"#utility.yul\":3402:3469   */\n      tag_84\n        /* \"#utility.yul\":3466:3468   */\n      0x0c\n        /* \"#utility.yul\":3461:3464   */\n      dup4\n        /* \"#utility.yul\":3402:3469   */\n      tag_44\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3395:3469   */\n      swap2\n      pop\n        /* \"#utility.yul\":3478:3571   */\n      tag_85\n        /* \"#utility.yul\":3567:3570   */\n      dup3\n        /* \"#utility.yul\":3478:3571   */\n      tag_45\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3591:3594   */\n      dup3\n        /* \"#utility.yul\":3587:3599   */\n      add\n        /* \"#utility.yul\":3580:3599   */\n      swap1\n      pop\n        /* \"#utility.yul\":3239:3605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3611:4030   */\n    tag_29:\n        /* \"#utility.yul\":3777:3781   */\n      0x00\n        /* \"#utility.yul\":3815:3817   */\n      0x20\n        /* \"#utility.yul\":3804:3813   */\n      dup3\n        /* \"#utility.yul\":3800:3818   */\n      add\n        /* \"#utility.yul\":3792:3818   */\n      swap1\n      pop\n        /* \"#utility.yul\":3864:3873   */\n      dup2\n        /* \"#utility.yul\":3858:3862   */\n      dup2\n        /* \"#utility.yul\":3854:3874   */\n      sub\n        /* \"#utility.yul\":3850:3851   */\n      0x00\n        /* \"#utility.yul\":3839:3848   */\n      dup4\n        /* \"#utility.yul\":3835:3852   */\n      add\n        /* \"#utility.yul\":3828:3875   */\n      mstore\n        /* \"#utility.yul\":3892:4023   */\n      tag_87\n        /* \"#utility.yul\":4018:4022   */\n      dup2\n        /* \"#utility.yul\":3892:4023   */\n      tag_46\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3884:4023   */\n      swap1\n      pop\n        /* \"#utility.yul\":3611:4030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220da7a37e982d7bfe306de1c525b7ff22be95494d45ae23de0d55cf232817e78a364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104178061005c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633b36f9aa146100435780638da5cb5b14610073578063caf7d19714610091575b5f80fd5b61005d60048036038101906100589190610210565b61009b565b60405161006a919061025d565b60405180910390f35b61007b610125565b60405161008891906102b5565b60405180910390f35b610099610148565b005b5f80831180156100aa57505f82115b6100b2575f80fd5b81836100be91906102fb565b90508281101580156100d05750818110155b6100dd576100dc61033c565b5b5f810361011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906103c3565b60405180910390fd5b92915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d757336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016101ce91906102b5565b60405180910390fd5b565b5f80fd5b5f819050919050565b6101ef816101dd565b81146101f9575f80fd5b50565b5f8135905061020a816101e6565b92915050565b5f8060408385031215610226576102256101d9565b5b5f610233858286016101fc565b9250506020610244858286016101fc565b9150509250929050565b610257816101dd565b82525050565b5f6020820190506102705f83018461024e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029f82610276565b9050919050565b6102af81610295565b82525050565b5f6020820190506102c85f8301846102a6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610305826101dd565b9150610310836101dd565b925082820261031e816101dd565b91508282048414831517610335576103346102ce565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b5f82825260208201905092915050565b7f6572726f722068616e646c6500000000000000000000000000000000000000005f82015250565b5f6103ad600c83610369565b91506103b882610379565b602082019050919050565b5f6020820190508181035f8301526103da816103a1565b905091905056fea2646970667358221220da7a37e982d7bfe306de1c525b7ff22be95494d45ae23de0d55cf232817e78a364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x417 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B36F9AA EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xCAF7D197 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0xAA JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0xB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xD0 JUMPI POP DUP2 DUP2 LT ISZERO JUMPDEST PUSH2 0xDD JUMPI PUSH2 0xDC PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 DUP2 SUB PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D7 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x8E4A23D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A DUP2 PUSH2 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x226 JUMPI PUSH2 0x225 PUSH2 0x1D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x233 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x244 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x257 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270 PUSH0 DUP4 ADD DUP5 PUSH2 0x24E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29F DUP3 PUSH2 0x276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x305 DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP PUSH2 0x310 DUP4 PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31E DUP2 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x335 JUMPI PUSH2 0x334 PUSH2 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6572726F722068616E646C650000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3AD PUSH1 0xC DUP4 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP3 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3DA DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH27 0x37E982D7BFE306DE1C525B7FF22BE95494D45AE23DE0D55CF23281 PUSH31 0x78A364736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "405:520:0:-:0;;;511:49;;;;;;;;;;543:10;535:5;;:18;;;;;;;;;;;;;;;;;;405:520;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addCustom_61": {
									"entryPoint": 155,
									"id": 61,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_7": {
									"entryPoint": 293,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validUser_76": {
									"entryPoint": 328,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4033:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:1"
															},
															"nodeType": "YulIf",
															"src": "783:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:1",
														"type": ""
													}
												],
												"src": "690:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1235:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1223:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1230:3:1",
														"type": ""
													}
												],
												"src": "1170:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1402:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1495:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1506:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1438:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1376:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1387:4:1",
														"type": ""
													}
												],
												"src": "1294:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1577:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1592:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1588:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1577:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1549:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1559:7:1",
														"type": ""
													}
												],
												"src": "1522:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1709:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1681:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1691:7:1",
														"type": ""
													}
												],
												"src": "1654:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1821:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1838:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1861:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1843:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1831:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1809:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1816:3:1",
														"type": ""
													}
												],
												"src": "1756:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1978:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1988:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2081:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2092:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2077:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2024:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2024:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1950:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1962:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1973:4:1",
														"type": ""
													}
												],
												"src": "1880:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2136:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2153:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2146:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2243:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2267:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2108:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2342:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2352:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2375:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2357:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2352:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2386:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2409:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2391:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2386:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2420:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2443:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2446:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "2424:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "2486:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2468:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2457:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2677:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2608:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2601:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2601:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2631:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2638:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2647:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2634:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2634:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2628:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2581:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2581:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:113:1"
															},
															"nodeType": "YulIf",
															"src": "2558:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2325:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2328:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2334:7:1",
														"type": ""
													}
												],
												"src": "2294:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2755:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2758:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2748:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2845:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2876:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2869:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2710:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2992:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3009:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3002:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3049:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3030:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2964:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2969:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2980:11:1",
														"type": ""
													}
												],
												"src": "2896:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3199:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3207:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:14:1"
																	},
																	{
																		"hexValue": "6572726f722068616e646c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3211:14:1",
																		"type": "",
																		"value": "error handle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3169:6:1",
														"type": ""
													}
												],
												"src": "3071:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3385:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3395:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3402:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3395:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3567:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed",
																	"nodeType": "YulIdentifier",
																	"src": "3478:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3478:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3478:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3580:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3373:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3381:3:1",
														"type": ""
													}
												],
												"src": "3239:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3782:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3792:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3804:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3800:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3792:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3850:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3864:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3884:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4018:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3892:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3884:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3762:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3777:4:1",
														"type": ""
													}
												],
												"src": "3611:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"error handle\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633b36f9aa146100435780638da5cb5b14610073578063caf7d19714610091575b5f80fd5b61005d60048036038101906100589190610210565b61009b565b60405161006a919061025d565b60405180910390f35b61007b610125565b60405161008891906102b5565b60405180910390f35b610099610148565b005b5f80831180156100aa57505f82115b6100b2575f80fd5b81836100be91906102fb565b90508281101580156100d05750818110155b6100dd576100dc61033c565b5b5f810361011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906103c3565b60405180910390fd5b92915050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d757336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016101ce91906102b5565b60405180910390fd5b565b5f80fd5b5f819050919050565b6101ef816101dd565b81146101f9575f80fd5b50565b5f8135905061020a816101e6565b92915050565b5f8060408385031215610226576102256101d9565b5b5f610233858286016101fc565b9250506020610244858286016101fc565b9150509250929050565b610257816101dd565b82525050565b5f6020820190506102705f83018461024e565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029f82610276565b9050919050565b6102af81610295565b82525050565b5f6020820190506102c85f8301846102a6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610305826101dd565b9150610310836101dd565b925082820261031e816101dd565b91508282048414831517610335576103346102ce565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b5f82825260208201905092915050565b7f6572726f722068616e646c6500000000000000000000000000000000000000005f82015250565b5f6103ad600c83610369565b91506103b882610379565b602082019050919050565b5f6020820190508181035f8301526103da816103a1565b905091905056fea2646970667358221220da7a37e982d7bfe306de1c525b7ff22be95494d45ae23de0d55cf232817e78a364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B36F9AA EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xCAF7D197 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x210 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0xAA JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0xB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xD0 JUMPI POP DUP2 DUP2 LT ISZERO JUMPDEST PUSH2 0xDD JUMPI PUSH2 0xDC PUSH2 0x33C JUMP JUMPDEST JUMPDEST PUSH0 DUP2 SUB PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D7 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x8E4A23D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A DUP2 PUSH2 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x226 JUMPI PUSH2 0x225 PUSH2 0x1D9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x233 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x244 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x257 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270 PUSH0 DUP4 ADD DUP5 PUSH2 0x24E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29F DUP3 PUSH2 0x276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF DUP2 PUSH2 0x295 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x305 DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP PUSH2 0x310 DUP4 PUSH2 0x1DD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31E DUP2 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x335 JUMPI PUSH2 0x334 PUSH2 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6572726F722068616E646C650000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3AD PUSH1 0xC DUP4 PUSH2 0x369 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP3 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3DA DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH27 0x37E982D7BFE306DE1C525B7FF22BE95494D45AE23DE0D55CF23281 PUSH31 0x78A364736F6C63430008140033000000000000000000000000000000000000 ",
							"sourceMap": "405:520:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;796:125;;;:::i;:::-;;566:224;621:6;651:1;647;:5;:14;;;;;660:1;656;:5;647:14;639:23;;;;;;680:1;676;:5;;;;:::i;:::-;672:9;;703:1;698;:6;;:16;;;;;713:1;708;:6;;698:16;691:24;;;;:::i;:::-;;734:1;729;:6;725:59;;751:22;;;;;;;;;;:::i;:::-;;;;;;;;725:59;566:224;;;;:::o;484:20::-;;;;;;;;;;;;:::o;796:125::-;852:5;;;;;;;;;;838:19;;:10;:19;;;834:81;;893:10;880:24;;;;;;;;;;;:::i;:::-;;;;;;;;834:81;796:125::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:222::-;1387:4;1425:2;1414:9;1410:18;1402:26;;1438:71;1506:1;1495:9;1491:17;1482:6;1438:71;:::i;:::-;1294:222;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2108:180::-;2156:77;2153:1;2146:88;2253:4;2250:1;2243:15;2277:4;2274:1;2267:15;2294:410;2334:7;2357:20;2375:1;2357:20;:::i;:::-;2352:25;;2391:20;2409:1;2391:20;:::i;:::-;2386:25;;2446:1;2443;2439:9;2468:30;2486:11;2468:30;:::i;:::-;2457:41;;2647:1;2638:7;2634:15;2631:1;2628:22;2608:1;2601:9;2581:83;2558:139;;2677:18;;:::i;:::-;2558:139;2342:362;2294:410;;;;:::o;2710:180::-;2758:77;2755:1;2748:88;2855:4;2852:1;2845:15;2879:4;2876:1;2869:15;2896:169;2980:11;3014:6;3009:3;3002:19;3054:4;3049:3;3045:14;3030:29;;2896:169;;;;:::o;3071:162::-;3211:14;3207:1;3199:6;3195:14;3188:38;3071:162;:::o;3239:366::-;3381:3;3402:67;3466:2;3461:3;3402:67;:::i;:::-;3395:74;;3478:93;3567:3;3478:93;:::i;:::-;3596:2;3591:3;3587:12;3580:19;;3239:366;;;:::o;3611:419::-;3777:4;3815:2;3804:9;3800:18;3792:26;;3864:9;3858:4;3854:20;3850:1;3839:9;3835:17;3828:47;3892:131;4018:4;3892:131;:::i;:::-;3884:139;;3611:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209400",
								"executionCost": "24514",
								"totalCost": "233914"
							},
							"external": {
								"addCustom(uint256,uint256)": "infinite",
								"owner()": "2505",
								"validUser()": "2565"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 560,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 511,
									"end": 560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 543,
									"end": 553,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 535,
									"end": 540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 535,
									"end": 540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 535,
									"end": 553,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 535,
									"end": 553,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 535,
									"end": 553,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 535,
									"end": 553,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 405,
									"end": 925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 925,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da7a37e982d7bfe306de1c525b7ff22be95494d45ae23de0d55cf232817e78a364736f6c63430008140033",
									".code": [
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "3B36F9AA"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "CAF7D197"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 566,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 566,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 566,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 484,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 796,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 566,
											"end": 790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 647,
											"end": 652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 656,
											"end": 661,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 647,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 647,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 639,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 639,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 639,
											"end": 662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 639,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 676,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 676,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 704,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 698,
											"end": 704,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 714,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 708,
											"end": 714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 691,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 691,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 691,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 725,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 751,
											"end": 773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 725,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 796,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 857,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 838,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 838,
											"end": 848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 838,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 838,
											"end": 857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 834,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 834,
											"end": 915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 893,
											"end": 903,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "8E4A23D600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 880,
											"end": 904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 834,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 834,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1438,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1438,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1642,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1861,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1843,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2024,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2108,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2257,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2357,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2357,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2391,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2391,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2411,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2486,
											"end": 2497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2468,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2498,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2468,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2664,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2558,
											"end": 2697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2677,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2558,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2710,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2852,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2884,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3049,
											"end": 3052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3233,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3071,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3211,
											"end": 3225,
											"name": "PUSH",
											"source": 1,
											"value": "6572726F722068616E646C650000000000000000000000000000000000000000"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3239,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3461,
											"end": 3464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3402,
											"end": 3469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3402,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3478,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3571,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3478,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 4030,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3611,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3892,
											"end": 4023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 4023,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3892,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 4030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 4030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 4030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCustom(uint256,uint256)": "3b36f9aa",
							"owner()": "8da5cb5b",
							"validUser()": "caf7d197"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"addCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":\"ErrorCustomHandle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol\":{\"keccak256\":\"0x7898fc0b647b67e2d91745601371d06094c686da9e3290f9a27bb66c4b918c91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c50e47069dfeb71996594c7d4656f343782bc6c90925305582ac65798e146bb\",\"dweb:/ipfs/QmVyYUfHprq6HanWG7tjEAm9vQawxRikCprYLUNtyUpUS1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/homework/7.errorCustomHandle/errorCustomHandle.sol:ErrorCustomHandle",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/homework/7.errorCustomHandle/errorCustomHandle.sol:29:5:\n   |\n29 |     function validUser() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 921,
					"file": "contracts/homework/7.errorCustomHandle/errorCustomHandle.sol",
					"start": 796
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/homework/7.errorCustomHandle/errorCustomHandle.sol": {
				"ast": {
					"absolutePath": "contracts/homework/7.errorCustomHandle/errorCustomHandle.sol",
					"exportedSymbols": {
						"ErrorCustomHandle": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ErrorCustomHandle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "ErrorCustomHandle",
							"nameLocation": "414:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "8e4a23d6",
									"id": 5,
									"name": "Unauthorized",
									"nameLocation": "449:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "470:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:16:0"
									},
									"src": "443:35:0"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "499:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "484:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "525:35:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "535:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "543:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "547:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "543:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "535:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "535:18:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:0"
									},
									"scope": 77,
									"src": "511:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "629:161:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 26,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "647:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "651:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "647:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 29,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "656:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "656:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "647:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "639:23:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "672:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 36,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "676:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 37,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "680:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "676:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "672:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "672:9:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 42,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "698:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 43,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "698:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 45,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "708:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 46,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "713:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "708:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "698:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 41,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "691:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "691:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "734:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "IfStatement",
												"src": "725:59:0",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "737:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "6572726f722068616e646c65",
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "758:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed",
																			"typeString": "literal_string \"error handle\""
																		},
																		"value": "error handle"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_5f766a77f31ff4789bc704c14a89aabea37a2ac86e794545cce2e6f6642232ed",
																			"typeString": "literal_string \"error handle\""
																		}
																	],
																	"id": 54,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "751:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "751:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 57,
															"nodeType": "ExpressionStatement",
															"src": "751:22:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3b36f9aa",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addCustom",
									"nameLocation": "575:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "590:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "585:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "593:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:16:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "626:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "621:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:8:0"
									},
									"scope": 77,
									"src": "566:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "824:97:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 64,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "838:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "842:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 66,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "852:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "838:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "IfStatement",
												"src": "834:81:0",
												"trueBody": {
													"id": 73,
													"nodeType": "Block",
													"src": "859:56:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 69,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "893:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "897:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "893:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 68,
																	"name": "Unauthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "880:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "880:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 72,
															"nodeType": "RevertStatement",
															"src": "873:31:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "caf7d197",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validUser",
									"nameLocation": "805:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:0"
									},
									"scope": 77,
									"src": "796:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "405:520:0",
							"usedErrors": [
								5
							],
							"usedEvents": []
						}
					],
					"src": "32:893:0"
				},
				"id": 0
			}
		}
	}
}